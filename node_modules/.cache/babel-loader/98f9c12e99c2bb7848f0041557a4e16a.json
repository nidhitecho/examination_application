{"ast":null,"code":"var _jsxFileName = \"G:\\\\TechnoServe Development\\\\examination_application\\\\src\\\\Components\\\\login\\\\login.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../login/login.css';\nimport t_logo from '../login/t_logo.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport validate from '../login/LoginFormValidationRules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  var _s = $RefreshSig$();\n\n  const useForm = (callback, validate) => {\n    _s();\n\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    useEffect(() => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    }, [errors]);\n\n    const handleSubmit = event => {// if (event) event.preventDefault();\n      // setErrors(validate(values));\n      // setIsSubmitting(true);\n    };\n\n    const handleChange = event => {\n      event.persist();\n      setValues(values => ({ ...values,\n        [event.target.name]: event.target.value\n      }));\n    }; // const [email, setEmail]= useState(\"\");\n    // const [password,setPassword] = useState(\"\");\n    // const handleSubmit = (event) => {\n    //     if (event) event.preventDefault();\n    //     setErrors(validate(values));\n    //   };\n    // function validateForm(){\n    //     if (email.length<3) \n    //     {\n    //            alert(\"email\")\n    //     }\n    // }\n    // function handleSubmit(event){\n    //     event.preventDefault();\n    //     alert(\"email\")\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"m-auto align-self-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"LoginCard\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: t_logo,\n              style: {\n                width: \"10rem\",\n                justifyContent: \"center\",\n                alignSelf: \"center\"\n              },\n              className: \"my-3 p-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Login\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: this.handleSubmit(),\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    size: \"lg\",\n                    controlId: \"email\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      autoFocus: true,\n                      type: \"email\",\n                      value: values.email || '',\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      value: password,\n                      onChange: e => setPassword(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"help is-danger\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    block: true,\n                    size: \"lg\",\n                    className: \"btn_login\",\n                    type: \"submit\",\n                    onClick: () => handleSubmit,\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"\",\n                      className: \"btn_forgot_password\",\n                      children: \"Forgot Password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["G:/TechnoServe Development/examination_application/src/Components/login/login.js"],"names":["React","useState","ReactDOM","t_logo","Form","Button","Card","Container","Row","Col","validate","Login","useForm","callback","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleSubmit","event","handleChange","persist","target","name","value","width","justifyContent","alignSelf","email","password","e","setPassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport  '../login/login.css';\r\nimport t_logo from '../login/t_logo.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport validate from '../login/LoginFormValidationRules';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Login(){\r\n    const useForm = (callback, validate) => {\r\n\r\n        const [values, setValues] = useState({});\r\n        const [errors, setErrors] = useState({});\r\n        const [isSubmitting, setIsSubmitting] = useState(false);\r\n      \r\n        useEffect(() => {\r\n          if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n          }\r\n        }, [errors]);\r\n      \r\n        const handleSubmit = (event) => {\r\n          // if (event) event.preventDefault();\r\n          // setErrors(validate(values));\r\n          // setIsSubmitting(true);\r\n        };\r\n      \r\n        const handleChange = (event) => {\r\n          event.persist();\r\n          setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n        };\r\n      \r\n   \r\n    // const [email, setEmail]= useState(\"\");\r\n    // const [password,setPassword] = useState(\"\");\r\n\r\n    // const handleSubmit = (event) => {\r\n    //     if (event) event.preventDefault();\r\n    //     setErrors(validate(values));\r\n    //   };\r\n\r\n    // function validateForm(){\r\n    //     if (email.length<3) \r\n    //     {\r\n    //            alert(\"email\")\r\n    //     }\r\n    // }\r\n\r\n    // function handleSubmit(event){\r\n    //     event.preventDefault();\r\n    //     alert(\"email\")\r\n    // }\r\n    return(\r\n\r\n   \r\n    <Container className=\"d-flex vh-100\">\r\n        <Row className=\"m-auto align-self-center\">\r\n          <Col>\r\n             <Card className=\"LoginCard\">\r\n                <Card.Img variant=\"top\" src={t_logo} style={{width:\"10rem\", justifyContent:\"center\", alignSelf:\"center\"}} className=\"my-3 p-3\" />\r\n                <Card.Body>\r\n    \r\n                    <div className=\"Login\">\r\n                            <Form onSubmit={this.handleSubmit()}>\r\n                                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                            <Form.Control \r\n                                            autoFocus\r\n                                            type=\"email\"\r\n                                            value={values.email || ''}\r\n                                            onChange={handleChange}\r\n                                            />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                            <Form.Control \r\n                                            type=\"password\"\r\n                                            value={password}\r\n                                            onChange ={(e)=>setPassword(e.target.value)}\r\n                                            required\r\n                                            />\r\n                                            {errors.email && (\r\n                                                    <p className=\"help is-danger\">{errors.email}</p>\r\n                                                  )}\r\n                                    </Form.Group>\r\n                                <Button block size=\"lg\" className=\"btn_login\" type=\"submit\" onClick={()=>handleSubmit}>Login</Button>\r\n                                <div>\r\n                                    <a href=\"\" className='btn_forgot_password' >Forgot Password?</a>\r\n                                </div>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n    \r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n       \r\n    );\r\n\r\n}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}