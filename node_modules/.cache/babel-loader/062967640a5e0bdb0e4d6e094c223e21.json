{"ast":null,"code":"var _jsxFileName = \"G:\\\\TechnoServe Development\\\\examination_application\\\\src\\\\Components\\\\login\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../login/login.css\";\nimport t_logo from '../login/t_logo.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    } else if (values.password.length > 10) {\n      errors.password = \"Password cannot exceed more than 10 characters\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"m-auto align-self-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"LoginCard\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: t_logo,\n            style: {\n              width: \"10rem\",\n              justifyContent: \"center\",\n              alignSelf: \"center\"\n            },\n            className: \"my-3 p-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit(),\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  size: \"lg\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    autoFocus: true,\n                    type: \"email\",\n                    name: \"email\",\n                    value: formValues.email,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"password\",\n                    value: formValues.password,\n                    onChange: handleChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  size: \"lg\",\n                  className: \"btn_login\",\n                  type: \"submit\",\n                  onClick: () => handleSubmit(),\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"\",\n                    className: \"btn_forgot_password\",\n                    children: \"Forgot Password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"+RVuQagXWuMGIFoIbfIwlZ6DgN0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["G:/TechnoServe Development/examination_application/src/Components/login/login.js"],"names":["React","useState","useEffect","t_logo","Form","Button","Card","Container","Row","Col","Login","initialValues","username","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","name","value","target","handleSubmit","preventDefault","validate","console","log","Object","keys","length","values","errors","regex","test","width","justifyContent","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../login/login.css\";\r\nimport t_logo from '../login/t_logo.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction Login() {\r\n  const initialValues = { username: \"\", email: \"\", password: \"\" };\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(formErrors);\r\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n      console.log(formValues);\r\n    }\r\n  }, [formErrors]);\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.username) {\r\n      errors.username = \"Username is required!\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Email is required!\";\r\n    } else if (!regex.test(values.email)) {\r\n      errors.email = \"This is not a valid email format!\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    } else if (values.password.length > 10) {\r\n      errors.password = \"Password cannot exceed more than 10 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return(\r\n\r\n   \r\n    <Container className=\"d-flex vh-100\">\r\n        <Row className=\"m-auto align-self-center\">\r\n          <Col>\r\n             <Card className=\"LoginCard\">\r\n                <Card.Img variant=\"top\" src={t_logo} style={{width:\"10rem\", justifyContent:\"center\", alignSelf:\"center\"}} className=\"my-3 p-3\" />\r\n                <Card.Body>\r\n    \r\n                    <div className=\"Login\">\r\n                            <Form onSubmit={this.handleSubmit()}>\r\n                                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                            <Form.Control \r\n                                            autoFocus\r\n                                            type=\"email\"\r\n                                            name='email'\r\n                                            value={formValues.email}\r\n                                            onChange={handleChange}\r\n                                            />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                            <Form.Control \r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            value={formValues.password}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                            />\r\n                                            \r\n                                    </Form.Group>\r\n                                <Button block size=\"lg\" className=\"btn_login\" type=\"submit\" onClick={()=>handleSubmit()}>Login</Button>\r\n                                <div>\r\n                                    <a href=\"\" className='btn_forgot_password' >Forgot Password?</a>\r\n                                </div>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n    \r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n       \r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}