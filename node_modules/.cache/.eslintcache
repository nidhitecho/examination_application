[{"G:\\TechnoServe Development\\examination_application\\src\\index.js":"1","G:\\TechnoServe Development\\examination_application\\src\\App.js":"2","G:\\TechnoServe Development\\examination_application\\src\\reportWebVitals.js":"3","G:\\TechnoServe Development\\examination_application\\src\\Components\\login\\login.js":"4"},{"size":500,"mtime":1625146843837,"results":"5","hashOfConfig":"6"},{"size":276,"mtime":1639565911307,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1625146843837,"results":"8","hashOfConfig":"6"},{"size":4227,"mtime":1639653349016,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"o3gtqh",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"G:\\TechnoServe Development\\examination_application\\src\\index.js",[],["21","22"],"G:\\TechnoServe Development\\examination_application\\src\\App.js",["23","24","25"],"import logo from './logo.svg';\nimport './App.css';\nimport './index.css';\nimport Card from 'react-bootstrap/Card';\nimport reactDom from 'react-dom';\nimport Login from './Components/login/login';\n\n\n\nfunction App() {\n  return (\n    \n    <Login/>\n    \n  );\n}\n\nexport default App;\n","G:\\TechnoServe Development\\examination_application\\src\\reportWebVitals.js",[],"G:\\TechnoServe Development\\examination_application\\src\\Components\\login\\login.js",["26","27"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../login/login.css\";\r\nimport t_logo from '../login/t_logo.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction Login() {\r\n  const initialValues = { email: \"\", password: \"\" };\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(formErrors);\r\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n      console.log(formValues);\r\n    }\r\n  }, [formErrors]);\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.username) {\r\n      errors.username = \"Username is required!\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Email is required!\";\r\n    } else if (!regex.test(values.email)) {\r\n      errors.email = \"This is not a valid email format!\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    } else if (values.password.length > 10) {\r\n      errors.password = \"Password cannot exceed more than 10 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return(\r\n    <Container className=\"d-flex vh-100\">\r\n        <Row className=\"m-auto align-self-center\">\r\n          <Col>\r\n             <Card className=\"LoginCard\">\r\n                <Card.Img variant=\"top\" src={t_logo} style={{width:\"10rem\", justifyContent:\"center\", alignSelf:\"center\"}} className=\"my-3 p-3\" />\r\n                <Card.Body>\r\n    \r\n                    <div className=\"Login\">\r\n                            <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                            <Form.Control \r\n                                            autoFocus\r\n                                            type=\"email\"\r\n                                            name='email'\r\n                                            value={formValues.email}\r\n                                            onChange={handleChange}\r\n                                            />\r\n                                            <p>{formErrors.email}</p>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                            <Form.Control \r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            value={formValues.password}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                            />\r\n                                            <p>{formErrors.password}</p>\r\n                                    </Form.Group>\r\n                                <Button block size=\"lg\" className=\"btn_login\" type=\"submit\" >Login</Button>\r\n                                <div>\r\n                                    <a href=\"\" className='btn_forgot_password' >Forgot Password?</a>\r\n                                </div>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n    \r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n       \r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Login;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":12},{"ruleId":"32","severity":1,"message":"37","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":35,"column":6,"nodeType":"40","endLine":35,"endColumn":18,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":91,"column":37,"nodeType":"44","endLine":91,"endColumn":81},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'reactDom' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formValues' and 'isSubmit'. Either include them or remove the dependency array.","ArrayExpression",["47"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [formErrors, formValues, isSubmit]",{"range":"50","text":"51"},[1111,1123],"[formErrors, formValues, isSubmit]"]